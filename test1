using Plots
using FFTW
using KrylovKit

#Nos paramétres
struct parameters_2D
    Kmax
    σ
    Lx
    Ly
    a
end


P_2D = parameters_2D(5.,1.,1.,1.,0.0001)

#Le réseau

a1 = (P_2D.a /2.) .* [sqrt(3),1]
a2 = (P_2D.a /2.) .* [sqrt(3),-1]

# n est un tableau d'entiers relatifs
Γ = (n -> n[1] .* a1 .+ n[2] .* a2)

#Le dual

b1 = (2*pi/(P_2D.a*sqrt(3))) .* [1, sqrt(3)]
b2 = (2*pi/(P_2D.a*sqrt(3))) .* [1, -sqrt(3)]

Γb = (n -> n[1] .* b1 .+ n[2] .* b2)

function Vpotentiel(x,y)
    -exp(-(x-0.5)^2/P_2D.σ)*exp(-(y-0.5)^2/P_2D.σ)
end

function f(x,y)
    cos(2*pi*x)+sin(2*pi*y)
end

function evaluation(f)
    eval = zeros((Int64(2*P_2D.Kmax)),(Int64(2*P_2D.Kmax)))
    for i in 1:(Int64(2*P_2D.Kmax))
        for j in 1:(Int64(2*P_2D.Kmax))
            eval[i,j] = f((j-1)/(2*P_2D.Kmax),(i-1)/(2*P_2D.Kmax))
        end
    end
    eval
end

V = evaluation(Vpotentiel)

#Vecteur [-P_2D,...,0,1,...P_2D]
kx =  P_2D.Kmax*2 .* fftfreq(Int64(2*P_2D.Kmax))

#Matrice pour le calcul du laplacien
Ii = zeros(Int64(2*P_2D.Kmax),Int64(2*P_2D.Kmax))
for i in 1:Int64(2*P_2D.Kmax)
    for j in 1:Int64(2*P_2D.Kmax)
        Ii[i,j]=kx[i]^2+kx[j]^2
    end
end


A = evaluation(f)

# by_k(k)(f) = -|k|^2 * f
function by_k(k)
    AUX = zeros(Int64(2*P_2D.Kmax),Int64(2*P_2D.Kmax))
    for i in 1:Int64(2*P_2D.Kmax)
        for j in 1:Int64(2*P_2D.Kmax)
            AUX[i,j]=-k[1]^2-k[2]^2
        end
    end
    X -> AUX .* X
end

# Le terme croisé entre k et ∇
function Cross(k)
    AUX = zeros(Int64(2*P_2D.Kmax),Int64(2*P_2D.Kmax))
    for i in 1:Int64(2*P_2D.Kmax)
        for j in 1:Int64(2*P_2D.Kmax)
            AUX[i,j]=(k[1]*kx[i]+k[2]*kx[j]) * 4 *pi
        end
    end
    X -> AUX .* X
end

#On a ∇(k) = (ik + ∇)^2 = -|k|^2 + 2i*k*∇ + Δ
function Δ(k)
    X -> by_k(k)(X) - Cross(k)(X) - 4*pi^2 .* X .* Ii
end

#La convolé
CFV = (X -> fft(ifft(X) .* V))

#Notre hamiltonien H(k) = -Δ(k) + V
function H(k)
    X -> -Δ(k)(X) + CFV(X)
end

ii = ones((Int64(2*P_2D.Kmax)),(Int64(2*P_2D.Kmax)))

#Il faudra faire varier k dans le dual
k = Γb([1,1])

res = eigsolve(H(k),ii,4,:SR)

(Ek,VPk) = res

println(Ek)

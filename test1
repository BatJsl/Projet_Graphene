using LinearAlgebra
using Plots

alpha = 10
zeta = 10

#Largeur du puit
L = 1.
#Tronquage de la base de fourier
K = 1000
#Hamiltonien
H = Matrix(0.0im*I,2K+1,2K+1)

for i in 1:(2*K+1)
    H[i,i] = 4*pi*pi*(-K+i-1)*(-K+i-1)/(L*L)
end

#Vecteur de fourier
function e_n(n,L,x)
    (1/sqrt(L))*cis(2* pi * x *n/L)
end

#Potentiel
function v(x)
    -alpha*exp(-zeta*x*x)
end

#Transformée de fourier de v

function Fv(x)
    alpha * sqrt(pi/zeta) * exp(-x*x/(4*zeta))
end


#Prend un vecteur de la famille BK = Vect{e_n(k,L)   |k| <= K} et renvoie la fonction associée évaluée en x
function fonc_fourier(cfF, L, x)
    K = length(cfF)
    K = (K-1)/2
    sum(cfF[i]*e_n(-K+i -1, L, x) for i in 1:Int64(2*K+1))
end

#H_k,p = <ek,Vep> = c{k-p}(v)/sqrt{L}
for i in 1:(2*K+1)
    for j in 1:(2*K+1)
        co = Fv(2*pi*(i-j)/L)/L
        H[i,j] += co
    end
end

#Bien vérifier le caractére Hamiltonien
H


Sol = eigvecs(H)

#psi ~sum sol1[k]*e(-Kmax + k -1) pour i allant de 0 à 2Kmax +1

#On trace les différents modes.
function Trace_sol(k,n)
    sol = [Sol[i,k] for i in 1:(2K+1)]
    X = [i*L/n - L/2 for i in 0:n]
    plot(x -> abs2(fonc_fourier(sol,L,x)),X)
    plot!(v)
end

Trace_sol(2,1000)
